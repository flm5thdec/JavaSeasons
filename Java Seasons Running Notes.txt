Java Season -1 

Day 1 

1996


Features of java : 

1. Simple 

-> syntax is based on c++ 
-> removed many of the confusing concepts like explicit pointers , operator overloading etc ..

+ - * / % 

2 + 5 = 7  here + used for addition

2 + 5 = 32 here + used for power operation

-> no need to remove unrefrenced objects , Garbage collector will do the deallocation activiies etc ..

------------------------------

2. Object Oriented 

OOP is a methodology that simplifies s/w development and maintanence using some rule 
	-Class
	-Object
	-Encapsulation
	-Polymorphism
	-Inheritance
	-Abstraction
	
--------------------------------

3. Robust (Strong)

- Java user Strong memory management 
- No pointers -> avoids security problems 
- automatic Garbage collector 
- Exception Handling & type checking 


----------------------------------

4. Secure 

JRE 

---------------------------------
5. Platform independent 

platform ==> OS 

-------------------------------
6. Architectural Neutral

7. Portable

WORA - Write Once Run Anywhere 

8. Distributed

9. Dynamic

10. Highly interpreted

11. High Performance

12. MultiThreaded

13. Networked.




********************************************************
Day 2 -  16th Jan Thursday
********************************************************

JDK installation : 

JDK 11

http://oracle.com/in/java/technologies/downloads/#java11-windows


C:\Program Files\Java\jdk-11


JDK Configuration :


Configuration means telling or informing OS where our jdk is present 


how to check java is installed and configuration ?

open cmd

C:\Users\Riyaz>java -version
java version "11.0.25" 2024-10-15 LTS
Java(TM) SE Runtime Environment 18.9 (build 11.0.25+9-LTS-256)
Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.25+9-LTS-256, mixed mode)


---------------------------------------------------
JDK Folders
---------------------------------------------------
					
						jdk
						
			
			lib          bin	  jre 	
						

lib : predefined stuff or java programs 

					collection of APIs (jar)
						|
					Collection of packages (folder)
						|
					Class    			& Interfaces   (.java) 
				Variables  Methods        Constants/Fields   Abstract MEthods	


********************************************************
Day 3 -  17th Jan Friday
********************************************************


jdk - bin folder : tools folders 

bin means binary or executable 


javac --> this is used to compile a java file 

syntax : 

to compile 

javac FileName.java

to execute 

java FileName 



JRE : Java runtime Environment 


JVM - Java Virtual Machine having abstract tasks (empty tasks) 

				
										JVM 
										
										
							CLSS 			EE 				GC 
							
							
									Interpreter	JIT compiler

CLSS - Class Loader Subsystem : 

- Loading 
- Linking 
- Initialization

EE - Execution engine 

Interpreter : Byte code --> binary Code 

line  by line code convert and execute 

JIT Compiler :  Just In Time Compiler 

looping /branching ( for / while etc ..)


GC : Garbage Collector  - Memory Deallocation


Mark 

Sweep 
		
System.gc();

Runtime.gc();


******************************************
JAVA MEMORY BLOCKS
******************************************

1. CLASS AREA / METHOD AREA

- .class Files 
- Static Variables
- Static Methods
- Static Blocks


2. Heap Area (Dynamic memory allocation)

- Objects
- arrays 

3. Java stack Area 

- local variables or declaration
- Expressions 
- current running logic / code 

4. String Constant Pool Area (SCPA)
only for String literals 
e.g 

String s1="FLM";



********************************************************
Day 4 -  20th Jan Monday
********************************************************
										
-----------------------------------
Structure of Java Program
-----------------------------------									

4 Sections 

1. Documentation Section  - optional 
2. Package Section - optional if you are not wokring in project otherwise mandate
3. Import Section - dependency 
4. Class/Interface Section - Mandate 


Eclipse download :

it's a direct application there is no need of installation 

https://www.eclipse.org/downloads/packages/

Latest "Eclipse IDE 2024-12 R Packages" 

what is the eclipse version in your project ?

Eclipse IDE 2024-03 R Packages


Eclipse IDE for Enterprise Java and Web Developers


???????????????????????????????
Assignment -1 

Complete Eclipse Set up 

Create a Project 

send the screenshot to below email id 

flmtechteam.testing@gmail.com 

????????????????????????????????????????

********************************************************
Day 5 -  21st Jan Tuesday
********************************************************

-----------------------------------
Structure of Java Program (cont...)
-----------------------------------									

4 Sections 

1. Documentation Section  - optional 
2. Package Section - optional if you are not wokring in project otherwise mandate
3. Import Section - dependency 
4. Class/Interface Section - Mandate 

1. Documentation Section means Comments 

single line comments //

multiline 
/* 
 khkjkh
 kjhjkhkj
 kjhkjhk
*/

2. Package Section 

package means folder 

why we need package ? 

for logical grouping 

or proper organization 

syntax :

package packname;

package pack1.pack2;


3. Import Section 

syntax :


import packagename.*;   ==> not prefered ==> poor readabilty 

import packagename.ClassName; ==>  prefered ==> good readabilty 

import static packagename.ClassName.methodname; ==> will be explained after completion of static variables and methods


4. Class / Interface 

Class will have variables and Methods 

Interface will have constants/fields and abstraction methods 

syntax :

access-specifier access-modifier class ClassName{


variables 
methods 


}

access-specifier or access-labels 

public/protected/private/<default>or<unspecified>

access-modifier tells about behaviour 

<default>or<unspecified>/ static / abstract 


********************************************************
Day 6 -  22nd Jan Wednesday
********************************************************

---------------------------------------
Java Naming Conventions
---------------------------------------

								  packages
									  |
					Classes           		Interfaces
					 |
		Variables       Methods			Constants/Fields        Abstract Methods 
		
		
packages : lowercase


e.g 

java.util

org.openqa.selenium 

testscripts

testscripts.regression



Classes or Interfaces : Title Case 

RamaKrishna  here Starting letter of each word will be upper case 

e.g 

Scanner
Hello
ValidateLogin
ChromeDriver

Variables/Objects or methods/Abstract Methods  :   CamelCase (lowerCase + TitleCase)


int x=10;

ArrayList allLinks;

println(

nextInt(

Constants/Fields : All upper case 


PI=3.14

MAX_LIMIT=10000

----------------------------------------
Variables in JAVA
----------------------------------------

referance name given to memory block 

int x=10 

-> simplifies expressions 

-> stores once recall anywhere in program 


syntax :

access-specifier access-modifier  datatype variableName ; ==> declaration 
variableName = value ; assignment

or

access-specifier access-modifier  datatype variableName = value ; declaration and assignment

int x;
x=10;

or
int x=10;


								Variables
								
				
				Local 					Instance 				Static 
				
				
1. Definition
2. when memory is allocated 
3. where memory is allocated
4. what is the calling style 
5. what is the scope or life time 			


Local Variables :



1. Definition:

variables which are declared inside a method 

2. when memory is allocated 

when that method is called during execution 

3. where memory is allocated

Java Stack Area 

4. what is the calling style 

variableName itself 


5. what is the scope or life time 			

till the end of the method 


Note : 

It's always resposibity of programmer to initialize local variables

-----------------------------------------------------

Instance Variables :

1. Definition

variables which are declared inside a class outside of method 

2. when memory is allocated 

when object / instance is created for that class 

ClassName objectName=new ClassName();

3. where memory is allocated

Heap Area along with Object 

4. what is the calling style 

objectName.variableName

5. what is the scope or life time 

till the last usage of object 			


********************************************************
Day 7 -  23rd Jan Thursday
********************************************************

--------------------------------
Static Variables
--------------------------------

if something is common and can be shared then go for static 

1. Definition

variables which are declared inside a class outside of method having keyword static 

2. when memory is allocated 

during .class file loading 

3. where memory is allocated

Class Area / Method Area 

4. what is the calling style 

ClassName.variableName;

5. what is the scope or life time 		

till the end of program 
	

----------------------------------------
Data Types in Java 
----------------------------------------

i=10 ==> Not a typed lang (e.g Python , REXX etc ..)

int i=10; ==> Strongly typed language (e.g Java)

										Datatypes
							
							
				primitive datatypes(8)					non-primitive datatypes (referenced or user defined)

		
		boolean 			Numeric 							Strings ,Arrays , Object etc ..
		
						char		Integral
						
						
								integer			floating point
		---------------------------------------------------------------						
								
		boolean			char 	byte short int long 	float    double			
						
						
123 321

2147483648
2147483643

3463847412

********************************************************
Day 8 -  24th Jan Friday
********************************************************

Method : a block 

-> set of instructions
-> It performs some particular task 


uses of methods : 

-> reusability
-> code clarity
-> avoids code redundaancy(duplication)
-> length of the code decreases
-> easy debugging of program 

********************************************************
Day 9 -  27th Jan Monday
********************************************************

syntax : 

access-specifier access-modifier return-type methodName(arguments or paramters)
{

local declarations ;

statements ;

return value;  ===> not required when return-type  is void 

}

Types of methods : 

one classification 

1. Predefined methods 					2.Userdefined Methods
e.g println()							  getAccountBalance()
nextInt()
sqrt()

other classifaction (based on behaviour) :

1. Instance Methods or non-static methods 		2.Static methods

------------------------------
1. Instance Methods or non-static methods 

1. Definition
any method which is declared without static keyword 
(default/final/abstract/ etc ..)


2. when memory is allocated 

while object creation memory block is allocated .

3. where memory is allocated

Heap Area (along with objects)

4. what is the calling style 

objectName.methodName()

5. what is the scope or life time 	

till the last usage of object Reference 	

------------------------------
Static methods

if there is some code which can be frequently used (common and shared across)

1. Definition

any method which is declared with static keyword 

2. when memory is allocated 

during .class files loading 

3. where memory is allocated

Class Area / Method Area 

4. what is the calling style

ClassName.methodName
 
5. what is the scope or life time 	

begining of program to end of program 

********************************************************
Day 10 -  28th Jan Tuesday
********************************************************

Based on return-type and arguments methods can be classified into 4 models 

1) methods without return-type and arguments 

2) methods with return type and no arguments

3) methods with no return-type and having arguments 

4) methods having return-type and arguments


Scanner class : java.util

nextInt():int 



PrinStream : Class (java.io)


println : this will print and takes the cursor to next line 

print : this will print and cursor will stay in same line 

* * * * * 
* * * *
* * *
* * 
*

printf : to format  your output 
format : same as printf output 

*************************
3 things to be know before 
using any method 

1) what arguments it is taking 
2) what is the return-type
3) what does this method do 

e.g 

Scanner

nextInt():int

1) what arguments it is taking  ==> no arguments
2) what is the return-type ==> int 
3) what does this method do ==> this method is going to scan an integer and return you the same 

===================================
OOP - Object Oriented Programming (Java ,c++, C# , python etc ..)

POP - Procedure Oriented Programming ( COBOL , C , etc ..)


-> "Simula" first OOP 
-> "Small Talk" is First Truely OOP 

1)Object
2)Class
3)Encapsulation
4)Polymorphism
5)Inheritance
6)Abstraction

Object : is anything that exists 

In Java, an object is an instance of a class that represents a real-world entity

3 characteristics for object:


state : represents data or attributes of an object 

variables 

Behaviour : represents the operations/tasks of an object 

methods 

Identity : a unique ID used by JVM to identify object 

Marker : (state /variables : shape , length , color etc ..)
		 (behaviour / methods :  writing on biard , marking something on parcel etc..)
		 
Dog : (state /variables : gender , breed , color etc ..)
		 (behaviour / methods :  eating , barking sleep etc..)
		 
AccountNumber : (state /variables : length of digits)
		 (behaviour / methods :  funds transfer, account statements etc..)
		 
********************************************************
Day 11 -  29th Jan Wednesday
********************************************************

Class : 

a logical entity

is a Blueprint/template  from which you can create object 


----------------------------------
Object Creation Techniques
-----------------------------------

1) using new operator 

ClassName objectName=new ClassName();

2)using SFM (Static Factory Method)

ClassName objectName=ClassName.method();

3) using NSFM (non-Static Factory Method)

when there is dependecy of one class to other class 

XSSFWorkbook

XSSFSheet 

XSSFWorkbook wb=new XSSFWorkbook();
XSSFSheet ws=wb.getSheet();

ClassName1 object1=new ClassName1();
ClassName2 object2=object1.methodName();

4) using cloning 

5) using Literals 

ClassName object = value ;

String or Wrapper 

e.g

String str="FLM";

6) using deserialization 
  no syntax
  implicit oprtaion (by JVM)
  

------------------------------------
Encapsulation
------------------------------------

Encapsulation in Java is a mechanism of wrapping
 the data (variables) and code acting on the data (methods) 
together as a single unit.

Encapsulation = Data hiding + Abstraction


********************************************************
Day 12 -  30th Jan Wednesday
********************************************************

e.g for Encapsulation :

Cold act tab/capsule 
ATM
Mobile Instrument etc ..


The field Bank.balance is not visible


--------------
this
---------------
is a keyword cum operator
is a predfined non-static variableName
represents current calling object referance


what is the need of this keyword ?

if local variables same as instance variables
local variables will dominate 


********************************************************
Day 13 -  31st Jan Thursday
********************************************************

Polymorphism :

Poly - many 

morphs - forms 	

The method add(int, int) in the type Sum is not applicable for the arguments (double, double)

The method add(int, int) in the type Sum is not applicable for the arguments (long, long)

The method add(int, int) in the type Sum is not applicable for the arguments (int, int, int)


Method Overloading :

Multiple methods in same class have same name but different paramaters

Static  Polymorphism is also called as 

Compile time or Ealry Binding

Binding means mapping the calling method and called method 

MEthod Overloading :

-> difference in data types 

add(double, double)
add(int, int)
add(long, long)
add(String, String)

-> show variance in no of arguments

add(int, int)
add(int, int, int)

--> change in order of argeuments  (not prefered beacuse few cases it won't work)


setStudentDetails(int, String)
SetStudentDetails(String, int) 

???????????????????????????????????????
Assignment - 2

Generate an Aadhar number using 
polymorphism 


A.C :

user can give only pancard or 
pancard and voter id or

pancard , voter id and passport 

o/p :  4512 0145 5012

note or tip : 
		System.out.print((int)(Math.random()*10000)+" ");
		
		send your program or screenshot to below email id
		
		flmtechteam.testing@gmail.com

?????????????????????????????????????????


********************************************************
Day 14 -  1st Feb Saturday
********************************************************

Method Signature :  

method name + paramaters list 

note : this doesn't include return type or access-modifiers

In Method Overloading method names are same but method signature is different 


-------------------------
Constructor
-------------------------
is a method having same name as ClassName 

					In OOPs
					
		Constructors 			Destructors	(java X)	
					
Rules of Constructor :

1) constructor name should match with Name 	of Class 
2) Constructors takes arguments but doesn't have return-type 
Q: what happens if we declare a return-type
Ans : no error , the method is no longer constructor , it will be treated as normal / concrete method 
3) Constructors has no modifiers (static / abstract / etc ..)
Error occurs when modifier is specified
Illegal modifier for the constructor in type Clock; only public, protected & private are permitted

4) Constructors access-specifiers should be either public or protected 

but not private or default (not prefered) 

********************************************************
Day 15 -  3rd Feb Monday
********************************************************
			
			
						Constructors
						
						
		default constructor                parameterized constructor
		or non-paramterized 

		
***************************
Inheritance 
***************************
1. single or Simple 
2. Multi level
3. Hiererichal 
4. Multiple
5. Hybrid 

********************************************************
Day 16 -  4th Feb Tuesday
********************************************************

3. Hiererichal 


4 access-specifiers

1. public - any class in world 
2. protected - only childor sub classes
3. default - only the classes present in that package 
4. private - no other class can access  


-----------------------------------
Method Overriding
-----------------------------------


Method Signature :  

method name + paramaters list 

In method overloading : Method Signature is not same 

In method overriding : Method Signature  is same 


********************************************************
Day 17 -  5th Feb Wednesday
********************************************************


Negative Scenarios for method overriding :

1) Private Methods cannot be overriden
2) Final Methods cannot be overriden
3) Static Methods cannot be overriden
Note : but if both parent and child are static the it is called "Method Hiding"
4) Return type mismatch or changing return type methods cannot be overriden

-------------------------
Super
-------------------------
Super is a keyword cum operator
which will refer to Current class Parent Reference 

-----------------------------------
Abstraction
-----------------------------------

								Abstraction
								
			abstract class						Interfaces
			
abstract class	 : 			
			
we can't create object for abstarct classes .
e.g  Cannot instantiate the type Numbers				
								

********************************************************
Day 18 -  6th Feb Thursday
********************************************************
								
								
----------------------
Interfaces
----------------------								

100 % abstraction

Constants/Fields      abstract methods 

double pi=3.14;

pi=2.14;
syntax :

public static final datatype ConstantName=value;

Interface syntax :

access-specifier access-modifier interface InterfaceName
{

//constants/fields
//abstarct methods 


} 

java.lang 

default of package 

Object class is the root class of classes .

********************************************************
Day 24 -  17th Feb Monday
********************************************************

--------------------------------------------------
operators in Java 
-------------------------------------------
Special symbol and it performs particular operation

							operators
							
								
			Unary				Binary				Ternary						
								
							
operator
operand can be value or variable 


Unary operators :

++     				--
increment			decrement 
							
							pre 							post 
							
				++     				--            ++     				--
			increment			decrement       increment			decrement 
			
			
a			a=a+1				a=a-1			a=a+1				a=a-1
			
			
pre-Increment 

++var ==> Increases the value forst , then returns it 


post-Increment 

var++ ==> Returns the value first and then increments it 			


-------------------
Binary Operators 

two operands with one operator in between 

-------------------
- Arithmethic / Mathematical Operators (5)

+ - * / % 

-------------------
- Relational Operators (comparision between two variables or values)(6)

always output is boolean (true or false)

> <  >= <=  == !=

-------------------
- Logical Operators (b/n two comparisions)

&&	 ||  !

and  or  not 


And 

		T    T     T
		T    F     F
		F    T     F
		F    F     F 
		
OR 

		T    T     T
		T    F     T
		F    T     T
		F    F     F 




//*[@id="app"]/div[1]/div/div[1]/div/div[2]/div[2]/form/div[3]/button

or

//button[@type]


//p[text()='Forgot your password? ']

********************************************************
Day 25 -  18th Feb Tuesday
********************************************************

-------------------------
- Bitwise Operators (7)

individual bits of integers

&   Bitwise AND 

|   Bitwise OR

^  Bitwise  XOR 

~  Bitwise compilment

<< Bitwise Left shift

>> Bitwise Right shift

>>> unary right shift 


int x=5;   // 0101

int y=3;   // 0011

----------------------------------------
- Assignment Operators

short hand or short circuit 

= +=  -= *= /=  %=  >>=   <<=

---------------------------------------

Ternary operator 
or
conditional operator
or 
decision making operator 

syntax : 

? : 

expr1 ? 	expr2  : expr3;

comparision True     False


-----------------------------
Member operator 

 .
 
e.g System.out 

    Math.random()
	
-----------------------------------------------------

********************************
CONTROL FLOW or 
FLOW CONTROL Statements
*********************************

							Control flow statements 
							
							
		decision making statements 		iterative/looping statement 				jump/transfer statements 					
	
		if else 						for											break 	
		switch							while										continue
										do while									return 
	
	
	salary   
	
	<=10000           10% 
	>10000  <=20000   20%
	>20000  <=30000   30%
	>30000            40%
	
if else 

if(condition)
here condition should always return a boolean value 


Shared by one of our friends (Venkat Rami Reddy)
Round : 3 (Face to Face Techno managerial round)
1.Introduction ( He asked multiple questions on my previous projects)
2.Programme to find maximum value in array using python/java without loop
3.Different types of data types
4. Question on collections
5. How to upload excel using selenium 
6. How will you find a broken link using selenium 
7. How will you found colour using selenium automation 
8. Write method for screenshot
9. What is POM .XML
10. Write a method to select drop down values and explain various types in it
11. explain difference b/w Put and get  in postman
12. What is RCA and how would you provide justification 
13. How would you choose the regressiony scenarios 
14. Tell me a few negative scenarios you have written 
15. What are Agile ceremonies 
16. Roles you played in all agile ceremonies
17. Do you have scrum master and PO in your project 
18. How you handle if you have short span of time for delivery 
19. How you handle if you were a team lead of 5 team members and 1 guy is lazy and not progressing with payload. How will you resolve or escalate it
20. How will you handle if there is a rivalry between you and fellow colleague and you need to work with him for product delivery 
21. What is your current team strength 
22. Provide justification for achievements mentioned in resume 
23. Why you want to join this organisation 
24. Why are you leaving previous organisation 
25. Exact experience in current company 
26. Are you currently serving Notice period


********************************************************
Day 26 -  19th Feb Wednesday
********************************************************

		salary   
		
					Non-IT 			IT 
	
	<=10000           10% 			20%
	>10000  <=20000   20%			30%
	>20000  <=30000   30%			40%
	>30000            40%			50%
	
	
Switch case :

switch(expression) {

case value1:  // code to executed 
              break ;
case value2:  // code to executed 
			  break;
			  
default: //code for non-matching 


}

expression can be  byte / short / int  / char / String 

but not  long , boolean , float / double 

Cannot switch on a value of type long. Only convertible int values, strings or enum variables are permitted
Cannot switch on a value of type float. Only convertible int values, strings or enum variables are permitted
Cannot switch on a value of type boolean. Only convertible int values, strings or enum variables are permitted

???????????????????????????????????????????????
Assignment : 6

write the scripts to launch browser based on browser name 

use iflese and also switch case 

if i choose "chrome" then chrome browser should be launched 
			 "firefox"	  
			 "edge" 


send the code/screenshot to below email id
flmtechteam.testing@gmail.com

???????????????????????????????????????????????	


********************************************************
Day 27 -  20th Feb Thursday
********************************************************


Iterative or looping statements 


---------------------
for loop 

if you know how many times you need to iterate then go for "for loop"

syntax :

for( initialization ; condition check ; increment or decrement )
{

statements 

}

--------------------------------
while loop

while(condition)
{

//statements 

}



		int i=1;
		for(;i<=5;)
		{
			System.out.println("Hello world...");
			i=i+1;
		}
		
-------------------------------------------
do while 

do 
{

//statements 


}while(condition);	


********************************************************
Day 28 -  22nd Feb Saturday
********************************************************
jump or transfer statements :

will be used inside a block or loop or switch case 

break :

this will break the current and further iteration 


continue : this will skip the particular iteration 


----------------------------------
Arrays
----------------------------------

it's a collection of homogenous datatypes having fixed length 

syntax :

for variable
access-specifier	access-modifier	datatype variableName = value;

for Array

method 1

access-specifier	access-modifier	datatype[] arrayName = {value1,value2..valuen};

or 


access-specifier	access-modifier	datatype[] arrayName =new datatype[no elements in array];



https://chat.whatsapp.com/EOi9a3hTEhSFPcKfPqFiTe